# .github/workflows/ci-cd.yml (FINAL-VERSION)

name: Build Layer and Deploy Lambdas

on:
  push:
    branches:
    - main
  workflow_dispatch:


jobs:
  # JOB 1: Build and publish the Lambda Layer
  build-and-publish-layer:
    runs-on: ubuntu-latest
    outputs:
      layer_arn: ${{ steps.publish_layer.outputs.layer_version_arn }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Zip utility
      run: sudo apt-get install -y zip

    - name: Build Layer package
      run: |
        # AWS Layers require dependencies to be in a specific folder structure
        mkdir -p build/python/lib/python3.9/site-packages
        pip install -r src/lambda_layer/requirements.txt -t build/python/lib/python3.9/site-packages
        cd build
        zip -r ../ml_libraries_layer.zip .

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Publish Layer to AWS
      id: publish_layer
      run: |
        # Publish the layer and capture the output ARN
        LAYER_ARN=$(aws lambda publish-layer-version \
          --layer-name aiops-self-healing-ml-libraries \
          --zip-file fileb://ml_libraries_layer.zip \
          --compatible-runtimes python3.9 \
          --query 'LayerVersionArn' \
          --output text)
        echo "Published Layer ARN: $LAYER_ARN"
        # Set the output for other jobs to use
        echo "layer_version_arn=$LAYER_ARN" >> $GITHUB_OUTPUT

  # JOB 2: Deploy all the Lambda functions
  deploy-lambda-functions:
    runs-on: ubuntu-latest
    # This job will only start AFTER the layer job has finished successfully
    needs: build-and-publish-layer
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Install Zip utility
      run: sudo apt-get install -y zip

    - name: Build and Deploy each Lambda function
      run: |
        cd src/lambda_functions
        for lambda_dir in */ ; do
          LAMBDA_NAME=${lambda_dir%/}
          echo "--------------------------------------------------"
          echo "Processing Lambda function: $LAMBDA_NAME"
          echo "--------------------------------------------------"
          
          mkdir -p package
          # The requirements file for anomaly_detection is now empty, so this will be fast
          if [ -f "$LAMBDA_NAME/requirements.txt" ] && [ -s "$LAMBDA_NAME/requirements.txt" ]; then
            pip install -r "$LAMBDA_NAME/requirements.txt" -t "package/"
          fi
          cp "$LAMBDA_NAME/app.py" "package/"
          (cd package && zip -r ../${LAMBDA_NAME}.zip .)

          # Associate the function with the new layer version created in the first job
          # The ARN is passed from the 'build-and-publish-layer' job
          if [ "$LAMBDA_NAME" == "anomaly_detection" ]; then
            echo "Attaching ML Layer to anomaly_detection function..."
            aws lambda update-function-configuration \
              --function-name aiops-self-healing-anomaly-detector \
              --layers ${{ needs.build-and-publish-layer.outputs.layer_arn }}
          fi

          echo "Deploying code for ${LAMBDA_NAME}.zip..."
          aws lambda update-function-code \
            --function-name aiops-self-healing-${LAMBDA_NAME//_/-} \
            --zip-file fileb://${LAMBDA_NAME}.zip
          
          rm -rf package
          rm ${LAMBDA_NAME}.zip
        done
