# .github/workflows/ci-cd.yml
# FINAL VERSION - Uses a public layer, so we only build and deploy function code.

name: Deploy Lambda Functions via S3

on:
  push:
    branches:
    - main
  workflow_dispatch:


jobs:
  build-and-deploy-functions:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Zip utility
      run: sudo apt-get install -y zip

    - name: Build and Upload Lambda Functions
      run: |
        cd src/lambda_functions
        for lambda_dir in */ ; do
          LAMBDA_NAME=${lambda_dir%/}
          echo "--- Processing Lambda: $LAMBDA_NAME ---"
          
          # Since anomaly_detection has an empty requirements.txt, this is simple
          mkdir -p package
          cp "$LAMBDA_NAME/app.py" "package/"
          if [ -f "$LAMBDA_NAME/requirements.txt" ] && [ -s "$LAMBDA_NAME/requirements.txt" ]; then
            pip install -r "$LAMBDA_NAME/requirements.txt" -t "package/"
          fi
          (cd package && zip -r ../${LAMBDA_NAME}.zip .)
          
          echo "Uploading $LAMBDA_NAME function to S3..."
          aws s3 cp ${LAMBDA_NAME}.zip s3://aiops-self-healing-ml-artifacts-ae5e41cffb13299d/lambda-functions/${LAMBDA_NAME}.zip

          echo "Updating function code for $LAMBDA_NAME..."
          # Using || true to prevent the workflow from failing if the function doesn't exist yet
          aws lambda update-function-code \
            --function-name aiops-self-healing-${LAMBDA_NAME//_/-} \
            --s3-bucket aiops-self-healing-ml-artifacts-ae5e41cffb13299d \
            --s3-key "lambda-functions/${LAMBDA_NAME}.zip" || true
          
          rm -rf package
          rm ${LAMBDA_NAME}.zip
        done
