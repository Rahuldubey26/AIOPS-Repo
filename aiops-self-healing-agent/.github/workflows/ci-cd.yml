# .github/workflows/ci-cd.yml

name: Deploy AIOps Lambdas to AWS

on:
  # This makes the workflow run on every push to the 'main' branch.
  push:
    branches:
    - main

  # This allows you to run the workflow manually from the Actions tab in GitHub.
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code from repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 # IMPORTANT: Make sure this matches your Terraform region

    - name: Set up Python environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Zip utility
      run: sudo apt-get install -y zip

    - name: Build and Deploy each Lambda function
      run: |
        # Navigate into the directory containing all the lambda function folders
        cd src/lambda_functions

        # Loop through each individual lambda function directory (e.g., "anomaly_detection", "log_analyzer")
        for lambda_dir in */ ; do
          # Remove the trailing slash to get a clean name (e.g., "anomaly_detection")
          LAMBDA_NAME=${lambda_dir%/}
          echo "--------------------------------------------------"
          echo "Processing Lambda function: $LAMBDA_NAME"
          echo "--------------------------------------------------"

          # Create a temporary directory for packaging to keep things clean
          mkdir -p package

          # If a requirements.txt file exists, install dependencies into the package directory
          if [ -f "$LAMBDA_NAME/requirements.txt" ]; then
            echo "Installing dependencies from requirements.txt..."
            pip install -r "$LAMBDA_NAME/requirements.txt" -t "package/"
          fi

          # Copy the function's own code (app.py) into the package directory
          cp "$LAMBDA_NAME/app.py" "package/"

          # Go into the package directory and create a zip file of its contents
          (cd package && zip -r ../${LAMBDA_NAME}.zip .)

          # Use the AWS CLI to deploy the newly created zip file to the correct Lambda function.
          # This replaces underscores in the folder name with hyphens for the AWS resource name.
          echo "Deploying ${LAMBDA_NAME}.zip to AWS..."
          aws lambda update-function-code \
            --function-name aiops-self-healing-${LAMBDA_NAME//_/-} \
            --zip-file fileb://${LAMBDA_NAME}.zip
          
          # Clean up the temporary directories and zip file to prepare for the next loop
          rm -rf package
          rm ${LAMBDA_NAME}.zip
          echo "Deployment for $LAMBDA_NAME complete."
        done
